version: 2.1 
jobs:
  build:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - checkout
      - run:
          command: |
            curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash -
            sudo apt-get install nodejs fuse libfuse2 kmod git jq patch appstream-util libindicator7 libdbusmenu-gtk4
            sudo depmod
            sudo modprobe fuse
      - run:
          command: |
            export NVM_DIR="/opt/circleci/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
      - run:
          command: |
            export NVM_DIR="/opt/circleci/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
            echo "nvm install v12.11.1..."
            nvm install v12.11.1
      - run:
          command: |
            export NVM_DIR="/opt/circleci/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
            echo "nvm use v12.11.1"
            nvm use v12.11.1
            echo "npm version"
            npm version
            echo "npm install -g yarn"
            npm install -g yarn
            echo "Done."
      - run:
          command: |
            mkdir bin; cd bin
            curl -L https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage -o appimagetool; chmod +x appimagetool
            curl -L https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage -o linuxdeploy; chmod +x linuxdeploy
            cd ..
            curl 'https://about.riot.im/images/riot-nav.svg' -o riot-nav.svg
            git clone https://github.com/vector-im/riot-web.git
      - run:
          command: |
            echo "NodeJS Version $(nodejs -v) is installed."
            cd riot-web
            patch -i ../package.json.patch
            cp config.sample.json config.json
            yarn install
            yarn add electron-builder --dev
            yarn build:electron:appimage
            cd ..
      - run:
          command: |
            ./riot-web/electron_app/dist/Riot-*.AppImage --appimage-extract
            mv squashfs-root AppDir
            cd AppDir
            mkdir -p usr/share/metainfo
            mkdir -p usr/share/icons/hicolor/scalable/apps
            mkdir -p usr/share/applications
            cp ../riot-nav.svg usr/share/icons/hicolor/scalable/apps
            cp ../im.vector.riot-web.appdata.xml usr/share/metainfo
            cp riot-web.desktop usr/share/applications
            cd ..
            export ARCH=x86_64
            export UPDATE_INFORMATION="gh-releases-zsync|zilti|riot-web.AppImage|latest|Riot-*.AppImage.zsync"
            bin/linuxdeploy --appdir=AppDir --desktop-file=AppDir/riot-web.desktop --icon-file=AppDir/usr/share/icons/hicolor/scalable/apps/riot-nav.svg -oappimage
            wget -c https://github.com/probonopd/uploadtool/raw/master/upload.sh
            bash upload.sh *.AppImage*
